import * as React from 'react';
import * as cn from 'classnames';

import { omit } from 'nav-frontend-js-utils';

const stegCls = (props) => cn('stepper__step', {
    'stepper__step--labelled': props.showLabel
});

const innerCls = (props) => cn('stepper__step-inner', {
    'stepper__step-inner--active': props.active,
    'stepper__step-inner--done': props.done,
    'stepper__step-inner--disabled': props.disabled,
    'stepper__step-inner--interactive': typeof props.onClick === 'function' && !props.active
});

export interface StepperStepProps {
    label: string;
    index: number;
    showLabel?: boolean;
    onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;
    active?: boolean;
    done?: boolean;
    disabled?: boolean;
}

const StepperStep = React.forwardRef<HTMLLIElement, StepperStepProps>((props, ref) => {

    const getInnerStep = () => {
        const labelTemplate = (
            <div className="stepper__step-label">{props.label || props.children}</div>
        );
        const label = (props.showLabel) ? labelTemplate : undefined;
        const num = props.index + 1;

        if (typeof props.onClick === 'function' && !props.active) {
            return (
                <button
                    className={innerCls(props)}
                    title={props.label}
                    onClick={props.onClick}
                    disabled={props.disabled}
                >
                    <div className="stepper__step-num">{num}</div>
                    {label}
                </button>
            );
        }

        return (
            <div className={innerCls(props)} title={props.label}>
                <div className="stepper__step-num">{num}</div>
                {label}
            </div>
        );
    };
    const domProps = omit(
        props,
        'label',
        'active',
        'done',
        'showLabel',
        'index',
        'disabled',
        'onClick'
    );

    return (
        <li ref={ref} className={stegCls(props)} {...domProps} aria-current={(props.active) ? 'step' : undefined }>
            {getInnerStep()}
        </li>
    );
});

export default StepperStep;
